# ============================================================================
# Docker Compose para Ruta Libre WhatsApp Bot - Producción
# ============================================================================

version: '3.8'

services:
  # ============================================================================
  # Aplicación principal
  # ============================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rutalibre-app
    restart: unless-stopped

    # Variables de entorno desde archivo .env
    env_file:
      - .env

    # Variables adicionales de producción
    environment:
      - NODE_ENV=production
      - MONGO_DB_URI=mongodb://mongo:27017/rutalibre_prod

    # Puertos expuestos
    ports:
      - "3000:3000"

    # Volúmenes para persistencia
    volumes:
      - ./logs:/app/logs:rw
      - ./temp:/app/temp:rw
      - ./bot_sessions:/app/bot_sessions:rw
      - ./public:/app/public:ro
      - ./admin:/app/admin:ro
      - ./conductor:/app/conductor:ro

    # Dependencias
    depends_on:
      mongo:
        condition: service_healthy

    # Configuración de red
    networks:
      - rutalibre-network

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================================================
  # Base de datos MongoDB
  # ============================================================================
  mongo:
    image: mongo:6.0-jammy
    container_name: rutalibre-mongo
    restart: unless-stopped

    # Variables de entorno
    environment:
      - MONGO_INITDB_DATABASE=rutalibre_prod
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-secure_mongo_password}

    # Puertos
    ports:
      - "27017:27017"

    # Volúmenes para persistencia
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
      - ./docker/mongo-init:/docker-entrypoint-initdb.d:ro

    # Configuración de red
    networks:
      - rutalibre-network

    # Health check
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

    # Límites de recursos
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # ============================================================================
  # Reverse Proxy con Nginx y SSL
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: rutalibre-nginx
    restart: unless-stopped

    # Puertos
    ports:
      - "80:80"
      - "443:443"

    # Volúmenes
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - ./public:/var/www/html/public:ro

    # Dependencias
    depends_on:
      - app

    # Configuración de red
    networks:
      - rutalibre-network

    # Límites de recursos
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ============================================================================
  # Servicio de respaldo automático (opcional)
  # ============================================================================
  backup:
    image: mongo:6.0-jammy
    container_name: rutalibre-backup
    restart: "no"  # Solo se ejecuta bajo demanda

    # Variables de entorno
    environment:
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=rutalibre_prod

    # Volúmenes
    volumes:
      - mongo_data:/data/db:ro
      - ./backups:/backup

    # Configuración de red
    networks:
      - rutalibre-network

# ============================================================================
# Servicio de respaldo automático (opcional) - DESHABILITADO TEMPORALMENTE
# ============================================================================
# backup:
#   image: mongo:6.0-jammy
#   container_name: rutalibre-backup
#   restart: "no"
#   environment:
#     - MONGO_HOST=mongo
#     - MONGO_PORT=27017
#     - MONGO_DB=rutalibre_prod
#   volumes:
#     - mongo_data:/data/db:ro
#     - ./backups:/backup
#   networks:
#     - rutalibre-network
#   command: >
#     sh -c "
#       echo 'Iniciando respaldo...' &&
#       mongodump --host mongo --port 27017 --db rutalibre_prod --out /backup/\$(date +%Y-%m-%d_%H-%M-%S) &&
#       echo 'Respaldo completado' &&
#       find /backup -mtime +7 -delete
#     "
#   profiles:
#     - backup

# ============================================================================
# Volúmenes nombrados para persistencia
# ============================================================================
volumes:
  mongo_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mongo

  mongo_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/configdb

# ============================================================================
# Red personalizada
# ============================================================================
networks:
  rutalibre-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
